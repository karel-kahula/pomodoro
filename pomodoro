#!/bin/bash
set -e

PIDFile=/tmp/pomodoro.pid
doBeginPomo=false
doWindPomo=false
interval=1500
pomoFile=/tmp/pomodoro
scriptName=$(basename $0)
winderTicks=12

cleanUp() {
    if [ -e $pomoFile ]; then
        rm $pomoFile
    fi
    if [ -e $PIDFile ]; then
      rm $PIDFile
    fi
}

endPomo() {
    displayNotification
    cleanUp
}

displayNotification() {
    # todo: make this a little friendlier to non-mac users...
    osascript -e 'display notification "ding" with title "🍅" sound name "default"'
}

initPomo() {
    beginTime=$(date '+%H:%M')
    if date -v -1d > /dev/null 2>&1; then #BSD date
        endTime=$(date -v +${interval}S '+%H:%M')
    else # Linux date
        endTime=$(date --date="+${interval} seconds" '+%H:%M')
    fi
    (sleep $interval; endPomo)&
    echo $! > $PIDFile
    echo "$beginTime -> $endTime" > $pomoFile
}

stopPomo() {
    if [ -e $PIDFile ]; then
        pomoPID=$(cat $PIDFile)
        checkPID=$(pgrep -f "$scriptName") || true
        if (echo "$checkPID" | fgrep --silent --word-regexp "$pomoPID"); then
            kill -TERM $pomoPID
        fi
        rm $PIDFile
    fi
    cleanUp
}

reportPomo() {
    if [ -e $pomoFile ]; then
        cat $pomoFile
    else
      exit 1
      fi
}

windPomo() {
    inputCount=0
    prompt="Wind-up the timer: "
    while IFS= read -p "$prompt" -r -s -n 1 char; do
        inputCount=$(dc <<< "$inputCount 1 + p")

        if [ $inputCount -gt $winderTicks ] || [ $inputCount -eq $winderTicks ]; then
            break
        fi

        prompt="*"
    done
    echo
}

printHelp() {
    echo "$scriptName - 🍅 - It's a 25 minute kitchen timer"
    echo
    echo "usage:"
    echo "$scriptName COMMAND"
    echo
    echo "commands:"
    echo "h, -h, --help"
    echo "      Show this help message"
    echo "b, begin"
    echo "      Begin the Pomodoro timer"
    echo "e, end"
    echo "      End the Pomodoro timer"
    echo "w, wind"
    echo "      Begin the Pomodoro by winding it up (mash some keys)"
    echo "s, status"
    echo "      Show current Pomodoro session start and end times"
    echo "a, alternate"
    echo "      Use the pomodoro alternate/break time (5 minutes)"
}

beginPomo() {
    stopPomo
    initPomo
    reportPomo
}

setInterval() {
    numberRe='^[0-9]+$'
    if test $1 && [[ $1 =~  $numberRe ]]; then
        interval=$(dc <<< "$1 60 * p")
    else
        printHelp
        exit 1
    fi
}

while test $# -gt 0; do
    case "$1" in
    h|help|-h|--help)
        printHelp
        exit 0
    ;;
    b|begin)
        doBeginPomo=true
        shift
    ;;
    s|status)
        reportPomo
        exit 0
    ;;
    e|end)
        stopPomo
        exit 0
    ;;
    w|wind)
        doWindPomo=true
        doBeginPomo=true
        shift
    ;;
    a|alternate)
        doBeginPomo=true
        setInterval '5'
        shift
    ;;
    -t|--time)
        shift
        setInterval "$@"
        shift
    ;;
    *)
        break
    ;;
    esac
done

if [ "$doWindPomo" = true ]; then
    windPomo
fi

if [ "$doBeginPomo" = true ]; then
    beginPomo
    exit 0
fi

printHelp
exit 1
